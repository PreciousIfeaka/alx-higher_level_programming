=============================================
The ``2-matrix_divided`` module and its use
=============================================

This module divides a given list of lists(matrix) by a given int or float value

Exceptions are checked

This file implements all test cases of the function

The module function is first imported:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

The following are a list of test cases for testing the function

1) when matrix is a list of integers.

    >>> matrix = [
    ...    [2, 1, 3],
    ...    [7, 6, 3]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.67, 0.33, 1.0], [2.33, 2.0, 1.0]]

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    Note that the resulting matrix have elements rounded up to 2 d.p

    also, the original matrix remains unchanged

    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

2) For floating point numbers

    >>> matrix = [
    ...     [1.1, -2.2, 3.3],
    ...     [4.4, 5.5, -6.6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

3) When integers and floats are combined

    >>> matrix = [
    ...     [1, -2.2, 3, 4.4, 5],
    ...     [-6.6, 7.00, 8, 9.999, 10]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

4) Invalid matrices

    >>> matrix = None
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
    >>> matrix = []
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[], []]
    >>> print(matrix_divided(matrix, 3))
    [[], []]

    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 3))
    [[]]

    if matrix is just a list(not a list of lists), it gives a ``TypeError``

    >>> matrix = [1, 2, 3]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

5) If an element is neither an int or float

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, "not a number", 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

6) If the rows are not of the same size

    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

7) Invalid div values

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, "not a number"))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number

this last one gives a ``ZeroDivisionError`` when div is 0

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
